/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8/userguide/building_java_projects.html
 */

plugins {
    id 'java'
    id 'application'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
	implementation group: 'commons-codec', name: 'commons-codec', version: '1.15'
	implementation group: 'commons-logging', name: 'commons-logging', version: '1.2'
	implementation group: 'org.apache.httpcomponents', name: 'httpasyncclient', version: '4.1.4'
	implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
	implementation group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.14'
    implementation group: 'org.apache.httpcomponents', name: 'httpcore-nio', version: '4.4.14'
	implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.13'
	implementation group: 'org.json', name: 'json', version: '20210307'
	implementation group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'

    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'
}

application {
    mainClassName = 'org.spray.keyauth.Application'
}

test {
    useJUnitPlatform()
}

task customFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': application.mainClassName
    }
    baseName = rootProject.name
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}
